// Added exclusion of the `ghost` type of button
// so as not to override those specific styles from default theme
// And the only style that needs to change is the non-filled version

.euiButtonIcon:not(.euiButtonIcon--empty) {
  &:disabled:not(.euiButtonIcon--ghost) {
    &,
    &:hover {
      $backgroundColorSimulated: mix($euiPageBackgroundColor, $euiButtonColorDisabled, 90%);
      background-color: transparentize($euiButtonColorDisabled, .9);
      color: makeDisabledContrastColor($euiButtonColorDisabled, $backgroundColorSimulated);
    }
  }
}

// Change the hollow (bordered) buttons ("default" style) to have a transparent background
// and no border
@each $name, $color in $euiButtonTypes {
  .euiButtonIcon--#{$name} {
    border: none;

    @if ($name == 'ghost') {
      // Ghost is unique and ALWAYS sits against a dark background.
      $backgroundColorSimulated: mix($euiColorInk, $color, 70%);
      color: makeHighContrastColor($color, $backgroundColorSimulated);
    } @else {
      &.euiButtonIcon--fill:focus {
        outline-color: lightOrDarkTheme($euiColorInk, $euiColorGhost);
      }
    }

    &:not(.euiButtonIcon--fill):not(.euiButtonIcon--empty):not([disabled]) {
      @include euiButtonDefaultStyle($color);
    }

    &.euiButtonIcon--fill:not([disabled]) {
      color: chooseLightOrDarkText($color, $euiColorGhost, $euiColorInk);

      &,
      &:hover,
      &:focus {
        background-color: $color;
      }
    }
  }
}
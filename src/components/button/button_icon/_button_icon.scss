.euiButtonIcon {
  @include euiButton;

  border: none;
  background-color: transparent;
  box-shadow: none;
  height: auto;
  min-height: $euiSizeL;
  min-width: $euiSizeL;
  line-height: 0; // ensures the icon creates the line-height and so it's always vertically centered
  padding: $euiSizeXS;
  border-radius: $euiBorderRadius;

  & > svg {
    // prevents the element and its children from receiving any pointer events to fix not bubbling click event in Safari
    // https://stackoverflow.com/questions/24078524/svg-click-events-not-firing-bubbling-when-using-use-element
    pointer-events: none;
  }

  &:disabled {
    color: $euiButtonColorDisabledText;
    pointer-events: none;
    border-color: $euiButtonColorDisabled;

    .euiButtonIcon__icon {
      pointer-events: auto;
      cursor: not-allowed;
    }

    &.euiButtonIcon--fill {
      // Only increase the contrast of background color to text to 2.0 for disabled
      color: makeHighContrastColor($euiButtonColorDisabled, $euiButtonColorDisabled, 2);
      background-color: $euiButtonColorDisabled;
      border-color: $euiButtonColorDisabled;

      &:hover,
      &:focus,
      &:focus-within {
        background-color: $euiButtonColorDisabled;
        border-color: $euiButtonColorDisabled;
      }
    }

    &:hover,
    &:focus {
      background-color: transparent;
      text-decoration: none;
    }
  }
}

// Create button modifiers based upon the map.
@each $name, $color in $euiButtonIconTypes {
  .euiButtonIcon--#{$name} {
    border: solid 1px $color;
    color: $color;

    &.euiButtonIcon--empty {
      border: none;

      &:focus {
        background-color: transparentize($color, .9);
      }

      &:hover,
      &:focus {
        @if ($name == 'disabled') {
          cursor: not-allowed;
        }
      }
    }

    &.euiButtonIcon--fill {
      background-color: $color;
      border-color: $color;

      // The function makes that hexes safe for theming
      $fillTextColor: chooseLightOrDarkText($color, $euiColorGhost, $euiColorInk);

      color: $fillTextColor;

      &:not([disabled]) {
        &:hover,
        &:focus,
        &:focus-within {
          background-color: darken($color, 5%);
          border-color: darken($color, 5%);
        }
      }
    }

    &.euiButtonIcon--default {

      &:not([disabled]) {
        $shadowColor: $euiShadowColor;
        @if ($name == 'ghost') {
          $shadowColor: $euiColorInk;
        } @else if (lightness($euiTextColor) < 50) {
          // Only if this is the light theme do we use the button variant color to colorize the shadow
          $shadowColor: desaturate($color, 60%);
        }

        @include euiSlightShadow($shadowColor);

        &:hover,
        &:focus,
        &:focus-within {
          @include euiSlightShadowHover($shadowColor);
          background-color: transparentize($color, .9);
        }
      }
    }
  }
}
